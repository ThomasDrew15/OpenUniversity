#BlueJ class context
comment0.params=
comment0.target=boolean\ getTrainComing()
comment0.text=\n\ @return\ trainComing\n
comment1.params=trainComing
comment1.target=void\ setTrainComing(boolean)
comment1.text=\n\ @param\ trainComing\n\ setter\ for\ trainComing\n
comment2.params=
comment2.target=void\ setPositions()
comment2.text=\n\ Sets\ the\ positions\ of\ the\ lights.\n
comment3.params=
comment3.target=int\ findNumRepeats()
comment3.text=\n\ Find\ out\ how\ many\ times\ red\ lights\ should\ flash\ at\ the\ crossing.\n\ Simulates\ length\ of\ train\ at\ crossing.\n
comment4.params=time
comment4.target=void\ delay(int)
comment4.text=\n\ Causes\ execution\ to\ pause\ for\ a\ number\ of\ milliseconds.\n
comment5.params=myLight\ colour
comment5.target=void\ colourLight(Light,\ ou.OUColour)
comment5.text=\n\ Qa\ This\ method\ should\ set\ the\ colour\ of\ the\ specified\ light\ to\ the\ specified\ colour\ if\ it\ is\ one\ of\ OUColour.RED,\ OUColour.GREEN,\ OUColour.ORANGE\ or\ OUColour.BLACK.\n\ Otherwise\ the\ colour\ should\ be\ unchanged.\ \n
comment6.params=lightOne\ lightTwo\ lightThree
comment6.target=LevelCrossingController(Light,\ Light,\ Light)
comment6.text=\n\ \ Qbii.\ Constructor\ for\ lights\n
comment7.params=
comment7.target=void\ changeState()
comment7.text=\n\ Qci\n
comment8.params=
comment8.target=void\ colourAllLights()
comment9.params=
comment9.target=void\ doTrainApproaching()
numComments=10
