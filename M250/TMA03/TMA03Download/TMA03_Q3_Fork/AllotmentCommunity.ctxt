#BlueJ class context
comment0.params=
comment0.target=void\ populateTestData()
comment0.text=\n\ Adds\ a\ set\ of\ test\ data,\ assigns\ some\ values\ to\ the\ set,\ which\ then\ gets\ assigned\ with\ a\ key\ to\ the\ map.\n
comment1.params=
comment1.target=void\ printMap()
comment1.text=\n\ Takes\ no\ arguments\ and\ iterates\ over\ all\ the\ map's\ keys\ to\ print\ out\ a\ meaningful\ textual\ representation\n\ of\ each\ key\ in\ the\ map\ and\ the\ associated\ value.\ Returns\ no\ value.\n
comment2.params=bedToFind
comment2.target=void\ printMapValue(java.lang.String)
comment2.text=\n\ Takes\ a\ single\ argument.\ If\ the\ argument\ is\ a\ key\ in\ the\ map,\ prints\ a\ meaningful\ textual\ representation\ of\n\ its\ associated\ value,\ otherwise\ prints\ an\ output\ line\ announcing\ that\ the\ key\ is\ not\ present.\ Returns\ no\ value.\n\n\ @param\ bedToFind\n
comment3.params=akey\ aValue
comment3.target=void\ addMapEntry(java.lang.String,\ java.lang.String)
comment3.text=\n\ \\\n\ Takes\ two\ arguments\ representing\ a\ key\ and\ a\ value.\ Adds\ the\ key\ and\ value\ to\ the\ map.\n\ If\ the\ key\ is\ already\ present\ the\ existing\ value\ is\ overwritten.\ Returns\ no\ value.\n\n\ @param\ aString\n\ @param\ aSet\n
comment4.params=keyToRemove
comment4.target=boolean\ deleteEntry(java.lang.String)
comment4.text=\n\ Takes\ a\ single\ argument\ representing\ a\ key\ in\ the\ map.\ If\ the\ key\ given\ as\ the\ argument\ exists,\n\ deletes\ the\ key-value\ pair\ from\ the\ map,\ and\ returns\ true,\ otherwise\ returns\ false.\n\ @param\ keyToRemove\n\ @return\n
comment5.params=akey\ aValue
comment5.target=void\ addToValueAtKey(java.lang.String,\ java.lang.String)
comment5.text=\n\ Adds\ a\ new\ element\ to\ the\ collection\ of\ elements\ for\ a\ particular\ key.\ You\ can\ assume\ that\ the\ key\n\ exists\ in\ the\ map.\ Returns\ no\ value.\n\ @param\ akey\n\ @param\ aValue\n
comment6.params=akey\ aValue
comment6.target=void\ deleteFromValueAtKey(java.lang.String,\ java.lang.String)
comment6.text=\n\ Deletes\ an\ element\ from\ the\ collection\ of\ elements\ for\ a\ particular\ key.\ You\ can\ assume\ that\ the\ key\n\ exists\ in\ the\ map\ and\ the\ corresponding\ collection\ contains\ the\ specified\ element.\ Returns\ no\ value.\n\ @param\ akey\n\ @param\ aValue\n
numComments=7
